# Generated by Django 2.2 on 2020-01-13 15:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Accessories_type', models.SmallIntegerField(choices=[(0, '育苗袋'), (1, '标签'), (2, '培育土'), (3, '育苗杯'), (4, '其他辅料')], default=0, verbose_name='辅料类型')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='辅料名称')),
                ('image', models.CharField(blank=True, max_length=100, null=True, verbose_name='图片路径')),
                ('inventory', models.IntegerField(default=0, verbose_name='库存')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='辅料描述')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '辅料',
                'verbose_name_plural': '辅料',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='品牌名称')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='品牌描述')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '品牌',
                'verbose_name_plural': '品牌',
            },
        ),
        migrations.CreateModel(
            name='Designer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='设计人')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '开发人',
                'verbose_name_plural': '开发人',
            },
        ),
        migrations.CreateModel(
            name='FirstLayerMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='菜单名')),
                ('url_type', models.SmallIntegerField(choices=[(0, 'related_name'), (1, 'absolute_url')], default=0)),
                ('url_name', models.CharField(max_length=64)),
                ('order', models.SmallIntegerField(default=0, verbose_name='菜单排序')),
            ],
            options={
                'verbose_name': '第一层菜单',
                'verbose_name_plural': '第一层菜单',
            },
        ),
        migrations.CreateModel(
            name='Lining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='里衬')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='里衬描述')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '里衬',
                'verbose_name_plural': '里衬',
            },
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='使用场景')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='使用场景描述')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '使用场景',
                'verbose_name_plural': '使用场景',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='系列名称')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='系列描述')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '系列',
                'verbose_name_plural': '系列',
            },
        ),
        migrations.CreateModel(
            name='SubMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='二层菜单名')),
                ('url_type', models.SmallIntegerField(choices=[(0, 'related_name'), (1, 'absolute_url')], default=0)),
                ('url_name', models.CharField(max_length=64)),
                ('order', models.SmallIntegerField(default=0, verbose_name='菜单排序')),
            ],
            options={
                'verbose_name': '第二层菜单',
                'verbose_name_plural': '第二层菜单',
            },
        ),
        migrations.CreateModel(
            name='Target_audience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='目标人群')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='目标人群描述')),
                ('isDelete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '目标人群',
                'verbose_name_plural': '目标人群',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('menus', models.ManyToManyField(blank=True, related_name='on_delete', to='ymx01.FirstLayerMenu')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productName', models.CharField(max_length=108, verbose_name='产品名称')),
                ('status', models.SmallIntegerField(choices=[(0, '设计'), (1, '完成')], default=0, verbose_name='产品状态')),
                ('title', models.CharField(blank=True, max_length=512, null=True, verbose_name='产品标题')),
                ('sellerSku', models.CharField(blank=True, max_length=32, null=True, verbose_name='SKU名称')),
                ('image', models.CharField(blank=True, max_length=50, null=True, verbose_name='产品图片')),
                ('number', models.CharField(blank=True, max_length=108, null=True, verbose_name='数量')),
                ('weight', models.CharField(blank=True, max_length=32, null=True, verbose_name='重量')),
                ('offer', models.CharField(blank=True, max_length=32, null=True, verbose_name='报价')),
                ('inf_more', models.TextField(blank=True, null=True, verbose_name='其他信息')),
                ('slogan', models.TextField(blank=True, null=True, verbose_name='Slogan')),
                ('features', models.TextField(blank=True, null=True, verbose_name='产品特点')),
                ('a_description', models.TextField(blank=True, null=True, verbose_name='A+描述')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('accessories', models.ManyToManyField(blank=True, null=True, related_name='on_delete', to='ymx01.Accessories', verbose_name='辅料')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete='on_delete', to='ymx01.Brand', verbose_name='品牌')),
                ('designer', models.ForeignKey(blank=True, null=True, on_delete='on_delete', to='ymx01.Designer', verbose_name='设计人')),
                ('scene', models.ForeignKey(blank=True, null=True, on_delete='on_delete', to='ymx01.Scene', verbose_name='使用场景')),
                ('series', models.ForeignKey(blank=True, null=True, on_delete='on_delete', to='ymx01.Series', verbose_name='系列')),
                ('target_audience', models.ManyToManyField(blank=True, null=True, related_name='on_delete', to='ymx01.Target_audience', verbose_name='人群')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
            },
        ),
        migrations.CreateModel(
            name='Periods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.SmallIntegerField(choices=[(0, '阶段一'), (1, '阶段二'), (2, '阶段三'), (3, '阶段四'), (4, '阶段五')], default=0, verbose_name='设计阶段')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='解决方案')),
                ('finish_date', models.DateField(default=django.utils.timezone.now, verbose_name='完结日期')),
                ('isDelete', models.IntegerField(default=0)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete='on_delete', to='ymx01.Product', verbose_name='产品')),
            ],
            options={
                'verbose_name': '设计阶段',
                'verbose_name_plural': '设计阶段',
            },
        ),
        migrations.AddField(
            model_name='firstlayermenu',
            name='sub_menus',
            field=models.ManyToManyField(blank=True, related_name='on_delete', to='ymx01.SubMenu'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('memo', models.TextField(blank=True, default=None, null=True, verbose_name='备注')),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ManyToManyField(blank=True, related_name='on_delete', to='ymx01.Role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
